{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentTime","Date","timerCurrentTimeId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","name","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","clockName","timerClockNameId","displayClock","hideClock","event","preventDefault","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,YAAa,IAAIC,MAFrB,EAKEC,mBAAqB,EALvB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,mBAAqBE,OAAOC,aAAY,WAC3C,EAAKC,SAAS,CAAEN,YAAa,IAAIC,OAEjCM,QAAQC,KAAK,EAAKT,MAAMC,YAAYS,cAAcC,OAAO,IAAK,MAC7D,OAZP,gCAeE,SAAmBC,GACbA,EAAUC,OAAST,KAAKU,MAAMD,MAEhCL,QAAQO,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDT,KAAKU,MAAMD,SAlBpE,kCAsBE,WACEG,cAAcZ,KAAKD,sBAvBvB,oBA0BE,WACE,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGb,KAAKU,MAAMD,OAGb,YAED,sBAAMI,UAAU,cAAhB,SACGb,KAAKJ,MAAMC,YAAYS,cAAcC,OAAO,IAAK,YApC5D,GAA2BO,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWZ,OAAO,GAE3C,MAAM,SAAN,OAAgBU,GAQX,IAAMG,EAAb,4MACExB,MAAQ,CACNyB,UAAU,EACVC,UAAW,WAHf,EAMEC,iBAAmB,EANrB,EAuBEC,aAAe,WACR,EAAK5B,MAAMyB,UACd,EAAKlB,SAAS,CAAEkB,UAAU,KAzBhC,EA6BEI,UAAY,SAACC,GACP,EAAK9B,MAAMyB,WACbK,EAAMC,iBACN,EAAKxB,SAAS,CAAEkB,UAAU,MAhChC,uDAQE,WAAqB,IAAD,OAClBO,SAASC,iBAAiB,QAAS7B,KAAKwB,cACxCI,SAASC,iBAAiB,cAAe7B,KAAKyB,WAE9CzB,KAAKuB,iBAAmBtB,OAAOC,aAAY,WACzC,EAAKC,SAAS,CAAEmB,UAAWN,QAC1B,QAdP,kCAiBE,WACEJ,cAAcZ,KAAKuB,kBACnBK,SAASE,oBAAoB,QAAS9B,KAAKwB,cAC3CI,SAASE,oBAAoB,cAAe9B,KAAKyB,aApBrD,oBAoCE,WACE,MAAgCzB,KAAKJ,MAA7ByB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKT,UAAU,MAAf,UACE,6CACEQ,GAAY,cAAC,EAAD,CAAOZ,KAAMa,WA1CnC,GAAyBR,IAAMC,WCZ/BgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.6f886b22.chunk.js","sourcesContent":["import React from 'react';\n\ntype ClockState = {\n  currentTime: Date;\n};\n\ninterface ClockProps {\n  name: string;\n}\n\nexport class Clock extends React.Component< ClockProps, ClockState> {\n  state = {\n    currentTime: new Date(),\n  };\n\n  timerCurrentTimeId = 0;\n\n  componentDidMount() {\n    this.timerCurrentTimeId = window.setInterval(() => {\n      this.setState({ currentTime: new Date() });\n      // eslint-disable-next-line\n      console.info(this.state.currentTime.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<ClockProps>): void {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerCurrentTimeId);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.currentTime.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface AppState{\n  hasClock: boolean;\n  clockName: string;\n}\n\nexport class App extends React.Component<{}, AppState> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerClockNameId = 0;\n\n  componentDidMount() {\n    document.addEventListener('click', this.displayClock);\n    document.addEventListener('contextmenu', this.hideClock);\n\n    this.timerClockNameId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerClockNameId);\n    document.removeEventListener('click', this.displayClock);\n    document.removeEventListener('contextmenu', this.hideClock);\n  }\n\n  displayClock = () => {\n    if (!this.state.hasClock) {\n      this.setState({ hasClock: true });\n    }\n  };\n\n  hideClock = (event: Event) => {\n    if (this.state.hasClock) {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    }\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        { hasClock && <Clock name={clockName} /> }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}